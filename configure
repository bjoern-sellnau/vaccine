#!/bin/sh

# Inputs
vaccine_src_dir="$(cd "$(dirname $0)" && pwd)/src"
vaccine_src=$vaccine_src_dir/vaccine.js
standalone_server_src=$vaccine_src_dir/dev_server_standalone.js
express_server_src=$vaccine_src_dir/dev_server_express.js
node_wrap_src=$vaccine_src_dir/dev_server_node_wrap.js
build_src=$vaccine_src_dir/build
build_node_src=$vaccine_src_dir/build_node

# Variables
app_name=
app_main=src/index
output_file=
library_dir=lib
build_script=./build
vaccine_path=vaccine.js    # The path to vaccine.js relative to build_node

vars_list='app_name app_main app_main_module output_file source_dir library_dir build_script vaccine_path'


fail() {
  echo $1 >&2
  exit 1
}

while test $# -gt 0
do
  case $1 in
    --app | -a)
      shift
      app_name=$1
      ;;
    --main | -m)
      shift
      app_main=$1
      ;;
    --output | -o)
      shift
      output_file=$1
      ;;
    --lib | -l)
      shift
      library_dir=$1
      ;;
    --build | -b)
      shift
      build_script=$1
      ;;
    *)
      fail "Unrecognized option: $1"
      ;;
  esac

  shift
done

test "X$app_name" = X && fail 'Must provide the name of app (option --app)'

test "X$output_file" = X && output_file=$app_name.js

app_main=$(echo $app_main | sed 's/\.js$//')

app_main_module=$(echo $app_main | sed 's#.*/##')

source_dir=$(echo $app_main | sed 's#/[^/]*$##')
test "X$source_dir" = "X$app_main" && source_dir=.


unindent() {
  sed 's/^  //'
}

remove_sections() {
  sed "/### $1 START ###/,/>>> $1 END >>>/d"
}

choose_section() {
  sed -e "1,/### $1 START ###/d" -e "/>>> $1 END >>>/,\$d"
}

insert_section() {
  file=$2
  sed -e "/--- $1 INSERT ---/r $file" -e "/--- $1 INSERT ---/d"
}

replace_vars() {
  sed_string=''
  for var in $vars_list
  do
    eval value=\$$var
    name=$(echo $var | tr '[a-z]' '[A-Z]')
    sed_string="$sed_string -e 's#{{{ $name }}}#$value#'"
  done
  eval sed $sed_string
}

start() {
  cat $1 | replace_vars
}

clean() {
  sed -e '/### .* START ###/d' -e '/>>> .* END >>>/d' -e '/--- .* INSERT ---/d'
}

test -d vaccines || mkdir vaccines
cd vaccines

make_vaccine_intermediate() {
  start $vaccine_src | remove_sections LOADER | unindent
}

start $vaccine_src | clean > vaccine_loader.js
make_vaccine_intermediate | clean > vaccine.js
make_vaccine_intermediate | choose_section MINIMAL |
    unindent | clean > vaccine_minimal.js

insert_node_wrap() {
  insert_section NODE_WRAP $node_wrap_src
}

start $express_server_src | remove_sections NODE | clean > dev_server_express.js
start $express_server_src | insert_node_wrap | clean > dev_server_express_node.js
start $standalone_server_src | remove_sections NODE | clean > dev_server_standalone.js
start $standalone_server_src | insert_node_wrap | clean > dev_server_standalone_node.js

start $build_src > build
chmod +x build

start $build_node_src > build_node
chmod +x build_node

